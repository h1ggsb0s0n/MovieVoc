@page "/word/addwords"
@inject NavigationManager navigationManager
@inject WordRepository wordRepository
@inject IMatToaster Toaster

<h3>Wörter der Datenbank zufügen</h3>

<EditForm Model="Word" OnValidSubmit="addWordsToList">
    <DataAnnotationsValidator />
    <div class="form-group">
        <MatTextField @bind-Value="@Word.EnglischWord" Label="Wort:"></MatTextField>
        <ValidationMessage For="@(() => Word.EnglischWord)" />
    </div>
    <div class="form-group">
        <MatTextField @bind-Value="@Word.Translation" Label="Übersetzung:"></MatTextField>
        <ValidationMessage For="@(() => Word.Translation)" />
    </div>
    <div class="form-group">
        <MatSelect HelperText="Helper Text" Label="Schwierigkeitslevel" @bind-Value="@Word.DifficultyLevel">
            <MatOption TValue="int" Value="1">Einfach</MatOption>
            <MatOption TValue="int" Value="2">Mittel</MatOption>
            <MatOption TValue="int" Value="3">Schwer</MatOption>

        </MatSelect>
        <ValidationMessage For="@(() => Word.DifficultyLevel)" />
    </div>

    <MatButton type="submit" OnClick="@addWordsToList">Wort der Liste hinzufügen</MatButton>
</EditForm>

<WordSelector SelectedWords="words"></WordSelector>

<MatButton OnClick="@addWordsToDatabase" Raised="true">Alle Wörter in der Liste der Datenbank zufügen</MatButton>



@code {

    public WordDTO Word = new WordDTO();

    List<WordDTO> words = new List<WordDTO>();

    private void addWordsToList()
    {
        if (validiereWort())
        {
            WordDTO newWord = new WordDTO();
            newWord.EnglischWord = this.Word.EnglischWord;
            newWord.Translation = this.Word.Translation;
            newWord.DifficultyLevel = this.Word.DifficultyLevel;

            words.Add(newWord);

            //Reset Form Field
            this.Word = new WordDTO();
            StateHasChanged();
        }
        else
        {
            Toaster.Add("Bitte füllen Sie alle Felder aus", MatToastType.Info, null, null);
        }


    }

    private async Task addWordsToDatabase()
    {
        var response = await wordRepository.AddWords(words);

        if (response.Success)
        {
            Toaster.Add($"{response.Response} Wörter wurden der Datenbank zugefügt", MatToastType.Success, null, null);
        }
        else
        {
            string errormsg = await response.GetBody();
            Toaster.Add($"Error: {errormsg}", MatToastType.Danger, null, null);
        }

    }


    /// <summary>
    /// Todo: Die Validation über das Form funktiniert nicht. 
    /// Daher wird hier manuel validiert.
    /// </summary>
    /// <returns></returns>
    private bool validiereWort()
    {
        if (String.IsNullOrEmpty(Word.EnglischWord))
        {
            return false;
        }

        if (String.IsNullOrEmpty(Word.Translation))
        {
            return false;
        }

        if (Word.DifficultyLevel < 1 || Word.DifficultyLevel > 3)
        {
            return false;
        }

        return true;

    }

}
