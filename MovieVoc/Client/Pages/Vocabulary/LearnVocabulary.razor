@page "/vocabulary/learn/{MovieId:int}"
@page "/vocabulary/learn/{MovieId:int}/{DifficultyLevel:int}"
@inject VocabularyRepository vocRepository


@if (vocabulary != null && vocabulary.Any())
{
    <div class="mat-layout-grid">
        <div class="mat-layout-grid-inner">


            <div class="mat-layout-grid-cell">
                <MatCard class="voc-mat-card">
                    <MatCardContent>
                        <div class="voc-mat-card-content">
                            @if (!showTranslation)
                            {

                                <MatHeadline5 class="voc-mat-card-clean-margin">
                                    Englisches Wort:
                                </MatHeadline5>
                                <MatRipple class="demo-mat-ripple" Color="@MatRippleColor.Primary">
                                    <MatH6>@currentVocWord.EnglischWord</MatH6>
                                </MatRipple>
                            }
                            else
                            {

                                <MatHeadline5 class="voc-mat-card-clean-margin">
                                    Deutsche Übersetzung:
                                </MatHeadline5>
                                <MatRipple class="demo-mat-ripple" Color="@MatRippleColor.Secondary">
                                    <MatH6>@currentVocWord.Translation</MatH6>
                                </MatRipple>
                            }

                        </div>
                    </MatCardContent>
                    <MatCardActions>
                        <MatCardActionButtons>

                        </MatCardActionButtons>
                        <MatButton OnClick="@toggleTranslation">Übersetzung anzeigen</MatButton>
                        <MatCardActionIcons>
                            <MatIconButton Icon="@MatIconNames.Check" OnClick="@wordKnown"></MatIconButton>
                            <MatIconButton Icon="@MatIconNames.Cancel" OnClick="@wordUnknown"></MatIconButton>
                        </MatCardActionIcons>
                    </MatCardActions>
                </MatCard>
            </div>

            <div class="mat-layout-grid-cell make-scrollable">
                <MatList>
                    @if (vocabulary.Any())
                    {
                        @foreach (VocWord voc in vocabulary)
                        {
                    <MatListItem Style="@(voc.correct ? "background-color: green" : "background-color: red")">
                        @voc.EnglischWord
                    </MatListItem>
                        }
                    }

                </MatList>
            </div>
        </div>
    </div>
}
else
{
    <p>Lade Vokabular...</p>
}



<MatButton @onclick="nextCard">Nächstes Wort</MatButton>


@code {

    [Parameter] public int MovieId { get; set; }
    [Parameter] public int DifficultyLevel { get; set; } = 0;
    List<VocWord> vocabulary { get; set; } = new List<VocWord>();

    int currentIndex;
    VocWord currentVocWord;
    bool showTranslation = false;

    protected async override Task OnInitializedAsync()
    {

        if (DifficultyLevel == 0)
        {
            this.vocabulary = await vocRepository.getVocFromMovie(MovieId);
            Console.WriteLine("geladen!");

        }
        else
        {
            List<VocWord> vocabulary = await vocRepository.getVocFromMovie(MovieId, DifficultyLevel);
            StateHasChanged();
        }

        if (vocabulary.Any())
        {
            this.currentVocWord = vocabulary.First();
            StateHasChanged();

        }

    }

    private void nextCard()
    {
        VocWord nextVocWord = vocabulary.ElementAtOrDefault(currentIndex++);
        if (nextVocWord != null)
        {
            this.currentVocWord = nextVocWord;
            showTranslation = false;

        }
        else
        {
            this.currentVocWord = vocabulary.ElementAtOrDefault(0);
            this.currentIndex = 0;


        }
    }

    private void toggleTranslation()
    {

        if (showTranslation)
        {
            this.showTranslation = false;
        }
        else
        {
            this.showTranslation = true;
        }
    }

    private void wordUnknown()
    {
        this.currentVocWord.correct = false;
        this.currentVocWord.numberOfTries++;
    }

    private void wordKnown()
    {
        this.currentVocWord.correct = true;
        this.currentVocWord.numberOfTries++;
    }

}
