@page "/vocabulary/learn/{MovieId:int}"
@page "/vocabulary/learn/{MovieId:int}/{DifficultyLevel:int}"
@inject VocabularyRepository vocRepository




<div class="mat-layout-grid">
    <div class="mat-layout-grid-inner">

        <div class="mat-layout-grid-cell">

            <MatCard class="voc-mat-card">
                <MatCardContent>
                    <div class="voc-mat-card-content">
                        <MatHeadline6 class="voc-mat-card-clean-margin">
                            Our Changing Planet
                        </MatHeadline6>
                    </div>
                </MatCardContent>
            </MatCard>

        </div>


        <div class="mat-layout-grid-cell">
            <MatCard class="voc-mat-card">
                <MatCardContent>
                    <div class="voc-mat-card-content">
                        @if (showTranslation)
                        {
                            <MatHeadline6 class="voc-mat-card-clean-margin">
                                Our Changing Planet
                            </MatHeadline6>
                        }
                        else
                        {
                            <MatRipple class="demo-mat-ripple" Color="@MatRippleColor.Secondary">
                                Secondary
                            </MatRipple>
                        }



                    </div>
                </MatCardContent>
            </MatCard>
        </div>

        <div class="mat-layout-grid-cell make-scrollable">
            <MatList>
                @if (vocabulary.Any())
                {
                    @foreach (VocWord voc in vocabulary)
                    {
                        <MatListItem>
                            @voc.EnglischWord
                        </MatListItem>
                    }
                }

            </MatList>
        </div>
    </div>
</div>

<MatButton @onclick="toggleTranslation">Übersetzung anzeigen</MatButton>
<MatButton @onclick="wordUnknown">Wort nicht gewusst</MatButton>
<MatButton @onclick="nextCard">Nächstes Wort</MatButton>
<MatButton @onclick="StateHasChanged">State change</MatButton>






<button @onclick="printVoc">Drucke vocabulary</button>

@code {

    [Parameter] public int MovieId { get; set; }
    [Parameter] public int DifficultyLevel { get; set; } = 0;
    List<VocWord> vocabulary { get; set; } = new List<VocWord>();

    public IEnumerable<string> items = Enumerable.Range(0, 333000).Select(i => i.ToString()).ToArray();
    int currentIndex;
    VocWord currentVocWord;
    bool showTranslation = false;

    protected async override Task OnInitializedAsync()
    {

        if (DifficultyLevel == 0)
        {
            Console.WriteLine("without diff");
            List<VocWord> vocabulary = await vocRepository.getVocFromMovie(MovieId);

        }
        else
        {
            Console.WriteLine("with diff");
            List<VocWord> vocabulary = await vocRepository.getVocFromMovie(MovieId, DifficultyLevel);
            StateHasChanged();
        }

        if (vocabulary.Any())
        {
            this.currentVocWord = vocabulary.First();
            StateHasChanged();
        }

    }

    private void nextCard()
    {
        VocWord nextVocWord = vocabulary.ElementAtOrDefault(currentIndex++);
        if (nextVocWord != null)
        {
            this.currentVocWord = nextVocWord;
            showTranslation = false;

        } else
        {
            //start at the beginning

        }
    }

    private void toggleTranslation()
    {
        if (showTranslation)
        {
            this.showTranslation = true;
        }else {
            this.showTranslation = false;
        }
    }

    private void wordUnknown()
    {
        this.currentVocWord.correct = false;
        this.currentVocWord.numberOfTries++;
    }


    private void printVoc()
    {
        if (vocabulary != null)
        {
            foreach (VocWord v in vocabulary)
            {
                Console.WriteLine(v.EnglischWord);
            }
        }
        Console.WriteLine("here");

        Console.WriteLine("difficulty level: " + DifficultyLevel);
    }

}
