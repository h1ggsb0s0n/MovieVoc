@page "/vocabulary/add"
@inject MovieRepository movieRepository
@inject VocabularyRepository vocRepository
@inject IMatToaster Toaster
@using MovieVoc.Client.Helpers;

@using MovieVoc.Client.Pages.Word
@using MovieVoc.Client.Pages.Movie

<h3>Wörter einem Film zufügen hinzufügen:</h3>

@if (SelectedMovie == null)
{
    <h2>Bitte Suchen sie einen Film aus:</h2>
    <SearchMoviesTypeahead getMovie="getSelectedMovie"></SearchMoviesTypeahead>
}
else
{

    <MatCard class="movie-mat-card">
        <MatCardContent>
            <img src="data:image/jpeg;base64, @SelectedMovie.Poster" style="width: 300px;" />
            <div class="movie-mat-card-content">
                <MatHeadline6 class="movie-mat-card-clean-margin">
                    @SelectedMovie.Title
                </MatHeadline6>
            </div>
        </MatCardContent>
        <MatCardActions>
            <div>
                <label>Wort suchen:</label>
                <SearchWordTypeahead getWord="addWordToSelectedWords"></SearchWordTypeahead>
                <WordSelector SelectedWords="SeletedWords"></WordSelector>
            </div>
        </MatCardActions>
    </MatCard>

    <button class="btn btn-primary" @onclick="addWordsToMovie">Alle Selektierten Wörter der Datenbank zufügen</button>

}



@code {

    public MovieDTO SelectedMovie { get; set; }

    public List<WordDTO> SeletedWords { get; set; } = new List<WordDTO>();



    private async void getSelectedMovie(int id)
    {
        this.SelectedMovie = await movieRepository.GetMovie(id);
        StateHasChanged();
    }

    private void addWordToSelectedWords(WordDTO word)
    {
        if (!SeletedWords.Any(x => x.Equals(word)))
        {
            SeletedWords.Add(word);
            StateHasChanged();
        }

    }


    private async void addWordsToMovie()
    {
        //Todo: Validierung zugefügt, da validierung oben nciht funktioniert.
        if (this.SeletedWords.Any() && SelectedMovie != null)
        {
            VocabularyDTO vocDTO = new VocabularyDTO();
            vocDTO.MovieId = SelectedMovie.Id;
            vocDTO.ListOfWords = SeletedWords;
            HttpResponseWrapper<int> response = await vocRepository.AddVocabularyToMovie(vocDTO);
            clearAllFields();
            if (response.Success)
            {

                Toaster.Add($"Wörter {response.Response} wurdem dem Film zugefügt", MatToastType.Success, null, null);
            }
            else
            {
                string errormsg = await response.GetBody();
                Toaster.Add($"Error: {errormsg}", MatToastType.Danger, null, null);
            }

            StateHasChanged();
        }
        else
        {
            Toaster.Add("Bitte fügen sie der liste auf der Linken Seite wörter zu", MatToastType.Info, null, null);
        }
    }


    private void clearAllFields()
    {
        this.SelectedMovie = null;
        this.SeletedWords.Clear();
    }


}
