@page "/movie/search"
@inject NavigationManager navigationManager
@inject MovieRepository movieRepository


<h3>Suche Filme:</h3>

<SearchMoviesTypeahead getMovie="getSelectedMovie"></SearchMoviesTypeahead>


@if (SelectedMovie != null)
{

    <MatCard class="movie-mat-card">
        <MatCardContent>
            <img src="data:image/jpeg;base64, @SelectedMovie.Poster" style="width: 300px;" />
            <div class="movie-mat-card-content">
                <MatHeadline6 class="movie-mat-card-clean-margin">
                    @SelectedMovie.Title
                </MatHeadline6>
            </div>

            <MatBody2 class="movie-mat-card-content movie-mat-card-clean-margin">
                @SelectedMovie.Summary
            </MatBody2>
        </MatCardContent>
        <MatCardActions>


            <MatSelect Label="Wählen Sie (optional) einen Schwierigkeitsgrad" @bind-Value="@difficultyLevel">
                <MatOption TValue="int" Value="0">Alle Wörter</MatOption>
                <MatOption TValue="int" Value="1">Einfach</MatOption>
                <MatOption TValue="int" Value="2">Mittel</MatOption>
                <MatOption TValue="int" Value="3">Schwer</MatOption>
            </MatSelect>

            <MatButton @onclick="goToLearningPage">Lerne diesen Film</MatButton>


        </MatCardActions>
    </MatCard>
}

@code {

    public MovieDTO SelectedMovie { get; set; }

    int difficultyLevel;

    private async void getSelectedMovie(int id)
    {
        this.SelectedMovie = await movieRepository.GetMovie(id);
        StateHasChanged();
    }

    private void goToLearningPage()
    {
        if(difficultyLevel == 0)
        {
            navigationManager.NavigateTo("vocabulary/learn/" + SelectedMovie.Id);
        }

        if(difficultyLevel > 0)
        {
            navigationManager.NavigateTo($"vocabulary/learn/{SelectedMovie.Id}/{difficultyLevel}");
        }

    }


}
